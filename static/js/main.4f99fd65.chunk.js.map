{"version":3,"sources":["expertise/Expertise.js","header/Header.js","ParagraphHeader.js","Paragraph.js","workplaces/Workspace.js","workplaces/Workplaces.js","education/Education.js","education/Educations.js","serviceWorker.js","index.js","App.js"],"names":["Expertise","class","skills","map","skill","Header","introduction","data","line","i","Fragment","key","length","src","name","title","mail","phone","skype","ParagraphHeader","this","props","children","Component","Paragraph","header","Workspace","start","end","achievements","project","achievement","Workplaces","workplaceList","workplaces","workplace","Education","major","school","date","skillsList","subskillList","subskills","sub","renderSkill","Educations","educationList","educations","education","Boolean","window","location","hostname","match","ReactDOM","render","className","href","target","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f99fd65.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport skills from '../data/expertise.json'\n\nexport default function Expertise() {\n    return (\n        <div class=\"expertise paragraph\">\n            <h2 class=\"section-header\">Expertise</h2>\n            {skills.map(skill => { return (<span class=\"skill\">{skill}</span>) })}\n        </div>\n    );\n}\n","import React from 'react'\nimport data from '../data/personal.json'\n\nexport default function Header() {\n    const introduction = data.introduction.map((line, i) => (<React.Fragment key={i}>{line} { i < data.introduction.length - 1 ? <br/> : ''}</React.Fragment>))\n    return (\n        <div class=\"header\">\n        <div class=\"profile-pic\">\n            <img src=\"me.jpg\"/>\n        </div>\n        <div class=\"name\">{data.name} - <span class=\"title\">{data.title}</span></div>\n        <div class=\"intro\">{introduction}</div>\n        <div class=\"contacts\">\n            <div class=\"email\"><img class=\"icon mail\" src=\"mail.png\"/>{data.mail}</div>\n            <div class=\"phone\"><img class=\"icon phone\" src=\"phone.png\"/>{data.phone}</div>\n            <div class=\"skype\"><img class=\"icon skype\" src=\"skype.png\"/>{data.skype}</div>\n        </div>\n        <div class=\"java-logo\">\n            <img class=\"logo\" src=\"java.png\"/>\n        </div>\n        </div>\n    )\n}","import React, { Component } from 'react';\n\nclass ParagraphHeader extends Component {\n    render() {\n        return <div class=\"paragraphHeader\"><h2>{this.props.children}</h2></div>\n    }\n}\nexport default ParagraphHeader;\n","import React from 'react'\nimport ParagraphHeader from './ParagraphHeader'\n\nexport default function Paragraph(props) {\n    return (\n        <div class=\"paragraph\">\n            <ParagraphHeader>{props.header}</ParagraphHeader>\n            {props.children}\n        </div>\n    )\n}","import React, { Component } from 'react';\n\nclass Workspace extends Component {\n    render() {\n        return(\n        <div class='workspace'>\n        <h3>{this.props.name}<span class='title'> - {this.props.title}</span> \n            <span class=\"date\"> ({this.props.start} - {this.props.end})</span></h3>\n        <ul>\n            {this.props.achievements.map(project => <div>\n                    <p>{project.project}</p>\n                    <ul>{project.achievements.map(achievement => <li>{achievement}</li>)}</ul>\n                    </div>)}\n\n        </ul>\n        </div>)\n    }\n}\n\nexport default Workspace;\n","import React from 'react'\nimport Paragraph from '../Paragraph'\nimport workplaces from '../data/workplaces.json'\nimport Workspace from './Workspace'\n\nexport default function Workplaces() {\n    const workplaceList = workplaces.map((workplace) => <Workspace {...workplace} />)\n    return (\n        <Paragraph header=\"Work Experience\">\n                {workplaceList}\n        </Paragraph>\n    )\n}","import React from 'react'\n\nexport default function Education({major, school, date, skills}) {\n\n    const renderSkill = (skill) => {\n        let subskillList = \"\"\n        if (!!skill.subskills) {\n            subskillList = (\n                <ul>\n                    {skill.subskills.map((sub) => <li>{sub}</li>)}\n                </ul>\n            )\n        }\n\n        return (\n            <li>\n                {skill.name}\n                {subskillList}\n            </li>\n        )\n    }\n\n    const skillsList = skills.map((skill) => renderSkill(skill))\n    return (\n        <div class=\"workspace\">\n                <h3> {major}\n                    <span class=\"title\"> - {school}</span>\n                    <span class=\"date\"> {date}</span>\n                </h3>\n                \n                <ul>\n                    {skillsList}\n                </ul>\n            </div>\n    )\n}","import React from 'react'\nimport educations from '../data/education.json'\nimport Paragraph from '../Paragraph.js'\nimport Education from './Education.js'\n\nexport default function Educations() {\n    const educationList = educations.map((education) => <Education {...education} />)\n    return (\n        <Paragraph header=\"Education & Training\">\n            {educationList}\n        </Paragraph>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Expertise from './expertise/Expertise.js'\nimport Header from './header/Header.js';\nimport Workplaces from './workplaces/Workplaces.js';\nimport Educations from './education/Educations.js';\n\nexport default function App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <Expertise />\n            <Workplaces/>\n            <Educations/>\n            <div className=\"poweredBy\">Powered by <a href=\"https://github.com/szirbucz/cv\" target=\"_blank\">https://github.com/szirbucz/cv</a></div>\n        </div>\n    )\n}"],"sourceRoot":""}